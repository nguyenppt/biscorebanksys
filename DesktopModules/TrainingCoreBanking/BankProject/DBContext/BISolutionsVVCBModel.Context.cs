//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BankProject.DBContext
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class VietVictoryCoreBankingEntities : DbContext
    {
        public VietVictoryCoreBankingEntities()
            : base("name=VietVictoryCoreBankingEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
   
        public DbSet<BCUSTOMER_SAVINGACCT> BCUSTOMER_SAVINGACCT { get; set; }
        public DbSet<B_AccountForBuyingTC> B_AccountForBuyingTC { get; set; }
        public DbSet<B_CashWithrawalForBuyingTC> B_CashWithrawalForBuyingTC { get; set; }
        public DbSet<B_CustomerSignature> B_CustomerSignature { get; set; }
        public DbSet<B_DEBUG> B_DEBUG { get; set; }
        public DbSet<B_ImportLCPayment> B_ImportLCPayment { get; set; }
        public DbSet<B_ImportLCPaymentCharge> B_ImportLCPaymentCharge { get; set; }
        public DbSet<B_SellTravellersCheque> B_SellTravellersCheque { get; set; }
        public DbSet<BACCOUNTOFFICER> BACCOUNTOFFICERs { get; set; }
        public DbSet<BACCOUNT> BACCOUNTS { get; set; }
        public DbSet<BADVISINGANDNEGOTIATION> BADVISINGANDNEGOTIATIONs { get; set; }
        public DbSet<BADVISINGANDNEGOTIATION_CHARGES> BADVISINGANDNEGOTIATION_CHARGES { get; set; }
        public DbSet<BBANK_BRANCH> BBANK_BRANCH { get; set; }
        public DbSet<BBANKCODE> BBANKCODEs { get; set; }
        public DbSet<BBANKING> BBANKINGs { get; set; }
        public DbSet<BBANKSWIFTCODE> BBANKSWIFTCODEs { get; set; }
        public DbSet<BBENEFICIARYBANK> BBENEFICIARYBANKs { get; set; }
        public DbSet<BCASHDEPOSIT> BCASHDEPOSITs { get; set; }
        public DbSet<BCASHWITHRAWAL> BCASHWITHRAWALs { get; set; }
        public DbSet<BCATEGORY> BCATEGORies { get; set; }
        public DbSet<BCHARGECODE> BCHARGECODEs { get; set; }
        public DbSet<BCHEQUEISSUE> BCHEQUEISSUEs { get; set; }
        public DbSet<BCHEQUESTATU> BCHEQUESTATUS { get; set; }
        public DbSet<BCHEQUETYPE> BCHEQUETYPEs { get; set; }
        public DbSet<BCOLLATERAL> BCOLLATERALs { get; set; }
        public DbSet<BCOLLATERAL_INFOMATION> BCOLLATERAL_INFOMATION { get; set; }
        public DbSet<BCOLLATERAL_STATUS> BCOLLATERAL_STATUS { get; set; }
        public DbSet<BCOLLATERALCONTINGENT_ENTRY> BCOLLATERALCONTINGENT_ENTRY { get; set; }
        public DbSet<BCOLLATERALRIGHT> BCOLLATERALRIGHTs { get; set; }
        public DbSet<BCOLLECTCHARGESBYCASH> BCOLLECTCHARGESBYCASHes { get; set; }
        public DbSet<BCOLLECTCHARGESFROMACCOUNT> BCOLLECTCHARGESFROMACCOUNTs { get; set; }
        public DbSet<BCOMMITMENT_CONTRACT> BCOMMITMENT_CONTRACT { get; set; }
        public DbSet<BCOMMODITY> BCOMMODITies { get; set; }
        public DbSet<BCONFIG> BCONFIGs { get; set; }
        public DbSet<BCONTINGENTACCOUNT> BCONTINGENTACCOUNTS { get; set; }
        public DbSet<B_COUNTRY> B_COUNTRY { get; set; }
        public DbSet<BCRFROMACCOUNT> BCRFROMACCOUNTs { get; set; }
        public DbSet<BCURRENCY> BCURRENCies { get; set; }
        public DbSet<BCUSTOMER_INFO> BCUSTOMER_INFO { get; set; }
        public DbSet<BCUSTOMER_LIMIT_MAIN> BCUSTOMER_LIMIT_MAIN { get; set; }
        public DbSet<BCUSTOMER_LIMIT_SUB> BCUSTOMER_LIMIT_SUB { get; set; }
        public DbSet<BCUSTOMER> BCUSTOMERS { get; set; }
        public DbSet<BDEPOSITACCT> BDEPOSITACCTS { get; set; }
        public DbSet<BDOCUMETARYCOLLECTIONCHARGE> BDOCUMETARYCOLLECTIONCHARGES { get; set; }
        public DbSet<BDOCUMETARYCOLLECTIONMT410> BDOCUMETARYCOLLECTIONMT410 { get; set; }
        public DbSet<BDRAWTYPE> BDRAWTYPEs { get; set; }
        public DbSet<BDRFROMACCOUNT> BDRFROMACCOUNTs { get; set; }
        public DbSet<BDYNAMICCONTROL> BDYNAMICCONTROLS { get; set; }
        public DbSet<BDYNAMICDATA> BDYNAMICDATAs { get; set; }
        public DbSet<BENCOM> BENCOMs { get; set; }
        public DbSet<BENQUIRYCHECK> BENQUIRYCHECKs { get; set; }
        public DbSet<BEXPORT_LC_ADV_NEGO> BEXPORT_LC_ADV_NEGO { get; set; }
        public DbSet<BFOREIGNEXCHANGE> BFOREIGNEXCHANGEs { get; set; }
        public DbSet<BFREETEXTMESSAGE> BFREETEXTMESSAGEs { get; set; }
        public DbSet<BIMPORT_DOCUMENTPROCESSING> BIMPORT_DOCUMENTPROCESSING { get; set; }
        public DbSet<BIMPORT_DOCUMENTPROCESSING_CHARGE> BIMPORT_DOCUMENTPROCESSING_CHARGE { get; set; }
        public DbSet<BIMPORT_DOCUMENTPROCESSING_MT734> BIMPORT_DOCUMENTPROCESSING_MT734 { get; set; }
        public DbSet<BIMPORT_NORMAILLC> BIMPORT_NORMAILLC { get; set; }
        public DbSet<BIMPORT_NORMAILLC_CHARGE> BIMPORT_NORMAILLC_CHARGE { get; set; }
        public DbSet<BIMPORT_NORMAILLC_MT700> BIMPORT_NORMAILLC_MT700 { get; set; }
        public DbSet<BIMPORT_NORMAILLC_MT707> BIMPORT_NORMAILLC_MT707 { get; set; }
        public DbSet<BIMPORT_NORMAILLC_MT740> BIMPORT_NORMAILLC_MT740 { get; set; }
        public DbSet<BINCOMINGCOLLECTIONPAYMENT> BINCOMINGCOLLECTIONPAYMENTs { get; set; }
        public DbSet<BINCOMINGCOLLECTIONPAYMENTCHARGE> BINCOMINGCOLLECTIONPAYMENTCHARGES { get; set; }
        public DbSet<BINCOMINGCOLLECTIONPAYMENTMT202> BINCOMINGCOLLECTIONPAYMENTMT202 { get; set; }
        public DbSet<BINCOMINGCOLLECTIONPAYMENTMT400> BINCOMINGCOLLECTIONPAYMENTMT400 { get; set; }
        public DbSet<BINDUSTRY> BINDUSTRies { get; set; }
        public DbSet<BINTEREST_RATE> BINTEREST_RATE { get; set; }
        public DbSet<BINTEREST_TERM> BINTEREST_TERM { get; set; }
        public DbSet<BINTERNALBANKACCOUNT> BINTERNALBANKACCOUNTs { get; set; }
        public DbSet<BINTERNALBANKPAYMENTACCOUNT> BINTERNALBANKPAYMENTACCOUNTs { get; set; }
        public DbSet<BLCTYPE> BLCTYPES { get; set; }
        public DbSet<BLDACCOUNT> BLDACCOUNTs { get; set; }
        public DbSet<BLOANGROUP> BLOANGROUPs { get; set; }
        public DbSet<BLOANPURPOSE> BLOANPURPOSEs { get; set; }
        public DbSet<BLOANWORKINGACCOUNT> BLOANWORKINGACCOUNTS { get; set; }
        public DbSet<BMACODE> BMACODEs { get; set; }
        public DbSet<BMENUTOP> BMENUTOPs { get; set; }
        public DbSet<BNewLoanControl> BNewLoanControls { get; set; }
        public DbSet<BOPENACCOUNT> BOPENACCOUNTs { get; set; }
        public DbSet<BOPENACCOUNT_COPY> BOPENACCOUNT_COPY { get; set; }
        public DbSet<BOPENACCOUNT_INTEREST> BOPENACCOUNT_INTEREST { get; set; }
        public DbSet<BOUTGOINGCOLLECTIONPAYMENT> BOUTGOINGCOLLECTIONPAYMENTs { get; set; }
        public DbSet<BOUTGOINGCOLLECTIONPAYMENTCHARGE> BOUTGOINGCOLLECTIONPAYMENTCHARGES { get; set; }
        public DbSet<BOUTGOINGCOLLECTIONPAYMENTMT910> BOUTGOINGCOLLECTIONPAYMENTMT910 { get; set; }
        public DbSet<BOVERSEASTRANSFER> BOVERSEASTRANSFERs { get; set; }
        public DbSet<BOVERSEASTRANSFERMT103> BOVERSEASTRANSFERMT103 { get; set; }
        public DbSet<BPaymentFrequenceControl> BPaymentFrequenceControls { get; set; }
        public DbSet<BPAYMENTMETHOD> BPAYMENTMETHODs { get; set; }
        public DbSet<BPLACCOUNT> BPLACCOUNTs { get; set; }
        public DbSet<BPRODUCTLINE> BPRODUCTLINEs { get; set; }
        public DbSet<BPRODUCTTYPE> BPRODUCTTYPEs { get; set; }
        public DbSet<BPROVINCE> BPROVINCEs { get; set; }
        public DbSet<BRELATIONCODE> BRELATIONCODEs { get; set; }
        public DbSet<BRESTRICT_TXN> BRESTRICT_TXN { get; set; }
        public DbSet<BRPODCATEGORY> BRPODCATEGORies { get; set; }
        public DbSet<BSalaryPaymentFrequency> BSalaryPaymentFrequencies { get; set; }
        public DbSet<BSalaryPaymentFrequencyDetail> BSalaryPaymentFrequencyDetails { get; set; }
        public DbSet<BSalaryPaymentFrequencyTerm> BSalaryPaymentFrequencyTerms { get; set; }
        public DbSet<BSalaryPaymentMethod> BSalaryPaymentMethods { get; set; }
        public DbSet<BSAVING_ACC_ARREAR> BSAVING_ACC_ARREAR { get; set; }
        public DbSet<BSAVING_ACC_DISCOUNTED> BSAVING_ACC_DISCOUNTED { get; set; }
        public DbSet<BSAVING_ACC_INTEREST> BSAVING_ACC_INTEREST { get; set; }
        public DbSet<BSAVING_ACC_PERIODIC> BSAVING_ACC_PERIODIC { get; set; }
        public DbSet<BSECTOR> BSECTORs { get; set; }
        public DbSet<BSWIFTCODE> BSWIFTCODEs { get; set; }
        public DbSet<BTRANSFERWITHDRAWAL> BTRANSFERWITHDRAWALs { get; set; }
        public DbSet<PROVISIONTRANSFER_DC> PROVISIONTRANSFER_DC { get; set; }
        public DbSet<Sochu> Sochus { get; set; }
        public DbSet<sysdiagram> sysdiagrams { get; set; }
        public DbSet<B_BuyTravellersCheque> B_BuyTravellersCheque { get; set; }
        public DbSet<B_ForeignExchange> B_ForeignExchange { get; set; }
        public DbSet<B_WUXOOMCashAdvance> B_WUXOOMCashAdvance { get; set; }
        public DbSet<B_ExchangeBanknotesManyDeno> B_ExchangeBanknotesManyDeno { get; set; }
        public DbSet<BCATEGORY_COPY> BCATEGORY_COPY { get; set; }
        public DbSet<BPRODUCTLINE_COPY> BPRODUCTLINE_COPY { get; set; }
        public DbSet<B_Denomination> B_Denomination { get; set; }
        public DbSet<BCOLLECTION_FOR_CRE_CARD_PAYM> BCOLLECTION_FOR_CRE_CARD_PAYM { get; set; }
        public DbSet<BTRANSFER_4_CRE_CARD_PAYMENT> BTRANSFER_4_CRE_CARD_PAYMENT { get; set; }
        public DbSet<BLOANINTEREST_KEY> BLOANINTEREST_KEY { get; set; }
        public DbSet<BAdvisingAndNegotiationLCCharge> BAdvisingAndNegotiationLCCharges { get; set; }
        public DbSet<B_ImportLCPaymentMT202> B_ImportLCPaymentMT202 { get; set; }
        public DbSet<B_ImportLCPaymentMT756> B_ImportLCPaymentMT756 { get; set; }
        public DbSet<B_LOAN_CREDIT_SCORING> B_LOAN_CREDIT_SCORING { get; set; }
        public DbSet<BNEWNORMALLOAN> BNEWNORMALLOANs { get; set; }
        public DbSet<B_AddConfirmInfo> B_AddConfirmInfo { get; set; }
        public DbSet<BEXPORT_DOCUMENTPROCESSING> BEXPORT_DOCUMENTPROCESSING { get; set; }
        public DbSet<BEXPORT_DOCUMENTPROCESSINGCHARGE> BEXPORT_DOCUMENTPROCESSINGCHARGE { get; set; }
        public DbSet<BIMPORT_NORMAILLC_MT747> BIMPORT_NORMAILLC_MT747 { get; set; }
        public DbSet<B_ExportLCPayment> B_ExportLCPayment { get; set; }
        public DbSet<B_ExportLCPaymentCharge> B_ExportLCPaymentCharge { get; set; }
        public DbSet<B_ExportLCPaymentMT202> B_ExportLCPaymentMT202 { get; set; }
        public DbSet<B_ExportLCPaymentMT756> B_ExportLCPaymentMT756 { get; set; }
        public DbSet<B_LOAN_DISBURSAL_SCHEDULE> B_LOAN_DISBURSAL_SCHEDULE { get; set; }
        public DbSet<B_BATCH_MAINTENANCE> B_BATCH_MAINTENANCE { get; set; }
        public DbSet<B_CheckBatchRunning> B_CheckBatchRunning { get; set; }
        public DbSet<BEXPORTCOLLECTIONPAYMENT> BEXPORTCOLLECTIONPAYMENTs { get; set; }
        public DbSet<BINCOMINGCOLLECTIONPAYMENTMT103> BINCOMINGCOLLECTIONPAYMENTMT103 { get; set; }
        public DbSet<B_LOAN_PROCESS_PAYMENT> B_LOAN_PROCESS_PAYMENT { get; set; }
        public DbSet<B_NORMALLOAN_PAYMENT_SCHEDULE> B_NORMALLOAN_PAYMENT_SCHEDULE { get; set; }
        public DbSet<BCASH_REPAYMENT> BCASH_REPAYMENT { get; set; }
        public DbSet<BNEWNORMALLOAN_REPAYMENT> BNEWNORMALLOAN_REPAYMENT { get; set; }
        public DbSet<V_LC_ChargeDetail> V_LC_ChargeDetail { get; set; }
        public DbSet<BDOCUMETARYCOLLECTION> BDOCUMETARYCOLLECTIONs { get; set; }
        public DbSet<B_CollectCharges> B_CollectCharges { get; set; }
        public DbSet<BOVERSEASTRANSFERCHARGECOMMISSION> BOVERSEASTRANSFERCHARGECOMMISSIONs { get; set; }
        public DbSet<BAdvisingAndNegotiationLC> BAdvisingAndNegotiationLCs { get; set; }
        public DbSet<BEXPORT_DOCUMETARYCOLLECTIONCHARGES> BEXPORT_DOCUMETARYCOLLECTIONCHARGES { get; set; }
        public DbSet<BEXPORT_LC_AMEND> BEXPORT_LC_AMEND { get; set; }
        public DbSet<B_ExchangeRates> B_ExchangeRates { get; set; }
        public DbSet<BEXPORT_LC_DOCS_PROCESSING_CHARGES> BEXPORT_LC_DOCS_PROCESSING_CHARGES { get; set; }
        public DbSet<B_ExchangeRates_History> B_ExchangeRates_History { get; set; }
        public DbSet<B_LOAN_TRANSACTION_HISTORY> B_LOAN_TRANSACTION_HISTORY { get; set; }
        public DbSet<BLOANINTEREST_KEY_HISTORY> BLOANINTEREST_KEY_HISTORY { get; set; }
        public DbSet<BEXPORT_LC_DOCS_PROCESSING> BEXPORT_LC_DOCS_PROCESSING { get; set; }
        public DbSet<BEXPORT_LC_DOCS_SETTLEMENT> BEXPORT_LC_DOCS_SETTLEMENT { get; set; }
        public DbSet<BEXPORT_LC_DOCS_SETTLEMENT_CHARGES> BEXPORT_LC_DOCS_SETTLEMENT_CHARGES { get; set; }
        public DbSet<BEXPORT_DOCUMETARYCOLLECTION> BEXPORT_DOCUMETARYCOLLECTION { get; set; }
        public DbSet<BEXPORT_LC> BEXPORT_LC { get; set; }
        public DbSet<BDOCUMETARYCOLLECTIONMT412> BDOCUMETARYCOLLECTIONMT412 { get; set; }
        public DbSet<BEXPORT_DOCS_PROCESSING_SETTLEMENT> BEXPORT_DOCS_PROCESSING_SETTLEMENT { get; set; }
        public DbSet<BEXPORT_DOCS_PROCESSING_SETTLEMENT_CHARGES> BEXPORT_DOCS_PROCESSING_SETTLEMENT_CHARGES { get; set; }
        public DbSet<BEXPORT_DOCS_PROCESSING_SETTLEMENT_MT910> BEXPORT_DOCS_PROCESSING_SETTLEMENT_MT910 { get; set; }
        public DbSet<BEXPORT_LC_CHARGES> BEXPORT_LC_CHARGES { get; set; }
    
        public virtual ObjectResult<string> B_BMACODE_GetNewID(string maCode, string refix, string flat)
        {
            var maCodeParameter = maCode != null ?
                new ObjectParameter("MaCode", maCode) :
                new ObjectParameter("MaCode", typeof(string));
    
            var refixParameter = refix != null ?
                new ObjectParameter("Refix", refix) :
                new ObjectParameter("Refix", typeof(string));
    
            var flatParameter = flat != null ?
                new ObjectParameter("Flat", flat) :
                new ObjectParameter("Flat", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("B_BMACODE_GetNewID", maCodeParameter, refixParameter, flatParameter);
        }
    
        public virtual ObjectResult<B_BRPODCATEGORY_GetAll_IdOver200_Result> B_BRPODCATEGORY_GetAll_IdOver200()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<B_BRPODCATEGORY_GetAll_IdOver200_Result>("B_BRPODCATEGORY_GetAll_IdOver200");
        }
    
        public virtual ObjectResult<BOPENACCOUNT_LOANACCOUNT_GetByCode_Result> BOPENACCOUNT_LOANACCOUNT_GetByCode(string customerID, string currency)
        {
            var customerIDParameter = customerID != null ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(string));
    
            var currencyParameter = currency != null ?
                new ObjectParameter("Currency", currency) :
                new ObjectParameter("Currency", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BOPENACCOUNT_LOANACCOUNT_GetByCode_Result>("BOPENACCOUNT_LOANACCOUNT_GetByCode", customerIDParameter, currencyParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> B_Normal_Loan_Get_RemainLimitAmount(string limitReferenceCode)
        {
            var limitReferenceCodeParameter = limitReferenceCode != null ?
                new ObjectParameter("LimitReferenceCode", limitReferenceCode) :
                new ObjectParameter("LimitReferenceCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("B_Normal_Loan_Get_RemainLimitAmount", limitReferenceCodeParameter);
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> B_Normal_Loan_Get_OfferedUntilDate(string limitReferenceCode)
        {
            var limitReferenceCodeParameter = limitReferenceCode != null ?
                new ObjectParameter("LimitReferenceCode", limitReferenceCode) :
                new ObjectParameter("LimitReferenceCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("B_Normal_Loan_Get_OfferedUntilDate", limitReferenceCodeParameter);
        }
    
        public virtual ObjectResult<B_Normal_Loan_Get_Productline_Info_Result> B_Normal_Loan_Get_Productline_Info(string limitReferenceCode)
        {
            var limitReferenceCodeParameter = limitReferenceCode != null ?
                new ObjectParameter("LimitReferenceCode", limitReferenceCode) :
                new ObjectParameter("LimitReferenceCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<B_Normal_Loan_Get_Productline_Info_Result>("B_Normal_Loan_Get_Productline_Info", limitReferenceCodeParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> B_LOAN_DISBURSAL_SCHEDULE_Get_Total_LoanAmount(string referCode)
        {
            var referCodeParameter = referCode != null ?
                new ObjectParameter("ReferCode", referCode) :
                new ObjectParameter("ReferCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("B_LOAN_DISBURSAL_SCHEDULE_Get_Total_LoanAmount", referCodeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> B_Normal_Loan_Process_Payment(Nullable<System.DateTime> endDateProcess)
        {
            var endDateProcessParameter = endDateProcess.HasValue ?
                new ObjectParameter("EndDateProcess", endDateProcess) :
                new ObjectParameter("EndDateProcess", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("B_Normal_Loan_Process_Payment", endDateProcessParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> B_Normal_Loan_GetRemainLoanAmount(string referCode)
        {
            var referCodeParameter = referCode != null ?
                new ObjectParameter("ReferCode", referCode) :
                new ObjectParameter("ReferCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("B_Normal_Loan_GetRemainLoanAmount", referCodeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> B_Normal_Loan_Process_Payment_AmendAuthorizeProcess(string referCode, Nullable<int> repaymentPerios)
        {
            var referCodeParameter = referCode != null ?
                new ObjectParameter("ReferCode", referCode) :
                new ObjectParameter("ReferCode", typeof(string));
    
            var repaymentPeriosParameter = repaymentPerios.HasValue ?
                new ObjectParameter("RepaymentPerios", repaymentPerios) :
                new ObjectParameter("RepaymentPerios", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("B_Normal_Loan_Process_Payment_AmendAuthorizeProcess", referCodeParameter, repaymentPeriosParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> B_Normal_Loan_Process_Payment_ClearUnusedSchedule(string referCode, Nullable<int> repaymentPerios)
        {
            var referCodeParameter = referCode != null ?
                new ObjectParameter("ReferCode", referCode) :
                new ObjectParameter("ReferCode", typeof(string));
    
            var repaymentPeriosParameter = repaymentPerios.HasValue ?
                new ObjectParameter("RepaymentPerios", repaymentPerios) :
                new ObjectParameter("RepaymentPerios", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("B_Normal_Loan_Process_Payment_ClearUnusedSchedule", referCodeParameter, repaymentPeriosParameter);
        }
    
        public virtual ObjectResult<B_Normal_Loan_Process_DisbursalRepaymentCheck_Result> B_Normal_Loan_Process_DisbursalRepaymentCheck(string referCode)
        {
            var referCodeParameter = referCode != null ?
                new ObjectParameter("ReferCode", referCode) :
                new ObjectParameter("ReferCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<B_Normal_Loan_Process_DisbursalRepaymentCheck_Result>("B_Normal_Loan_Process_DisbursalRepaymentCheck", referCodeParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> B_Normal_Loan_Account_GetCurrentAmount(string accountID)
        {
            var accountIDParameter = accountID != null ?
                new ObjectParameter("AccountID", accountID) :
                new ObjectParameter("AccountID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("B_Normal_Loan_Account_GetCurrentAmount", accountIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> B_Normal_Loan_CashRepayment_Subtract_To_Account(string accountID, Nullable<decimal> subtractAmount, string referCode, Nullable<int> userID)
        {
            var accountIDParameter = accountID != null ?
                new ObjectParameter("AccountID", accountID) :
                new ObjectParameter("AccountID", typeof(string));
    
            var subtractAmountParameter = subtractAmount.HasValue ?
                new ObjectParameter("SubtractAmount", subtractAmount) :
                new ObjectParameter("SubtractAmount", typeof(decimal));
    
            var referCodeParameter = referCode != null ?
                new ObjectParameter("ReferCode", referCode) :
                new ObjectParameter("ReferCode", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("B_Normal_Loan_CashRepayment_Subtract_To_Account", accountIDParameter, subtractAmountParameter, referCodeParameter, userIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> B_ExchangeRate_history_process(string currency, Nullable<decimal> rate, Nullable<int> userId, Nullable<int> type)
        {
            var currencyParameter = currency != null ?
                new ObjectParameter("Currency", currency) :
                new ObjectParameter("Currency", typeof(string));
    
            var rateParameter = rate.HasValue ?
                new ObjectParameter("Rate", rate) :
                new ObjectParameter("Rate", typeof(decimal));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("B_ExchangeRate_history_process", currencyParameter, rateParameter, userIdParameter, typeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> B_LoanInterested_Key_history_process(Nullable<long> monthLoanRateNo, Nullable<decimal> vND_InterestRate, Nullable<decimal> uSD_InterestRate, Nullable<int> userId, Nullable<int> type)
        {
            var monthLoanRateNoParameter = monthLoanRateNo.HasValue ?
                new ObjectParameter("MonthLoanRateNo", monthLoanRateNo) :
                new ObjectParameter("MonthLoanRateNo", typeof(long));
    
            var vND_InterestRateParameter = vND_InterestRate.HasValue ?
                new ObjectParameter("VND_InterestRate", vND_InterestRate) :
                new ObjectParameter("VND_InterestRate", typeof(decimal));
    
            var uSD_InterestRateParameter = uSD_InterestRate.HasValue ?
                new ObjectParameter("USD_InterestRate", uSD_InterestRate) :
                new ObjectParameter("USD_InterestRate", typeof(decimal));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("B_LoanInterested_Key_history_process", monthLoanRateNoParameter, vND_InterestRateParameter, uSD_InterestRateParameter, userIdParameter, typeParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> B_Normal_Loan_Get_RemainLimitAmount_Exclude_LoanID(string limitReferenceCode, string code)
        {
            var limitReferenceCodeParameter = limitReferenceCode != null ?
                new ObjectParameter("LimitReferenceCode", limitReferenceCode) :
                new ObjectParameter("LimitReferenceCode", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("B_Normal_Loan_Get_RemainLimitAmount_Exclude_LoanID", limitReferenceCodeParameter, codeParameter);
        }
    }
}
